{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","name","email","id","className","src","alt","CardList","robots","cardComponent","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchField","target","value","fetch","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","React","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,2CCOCQ,EAZF,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,MAAOC,EAAM,EAANA,GACxB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAG,mCAA8BF,EAA9B,YAA4CG,IAAI,SACxD,gCACI,6BAAKL,IACL,4BAAIC,WCaLK,EAjBE,SAAC,GAAY,IAAXC,EAAU,EAAVA,OACTC,EAAgBD,EAAOE,KAAI,SAACC,EAAMC,GACpC,OACA,cAAC,EAAD,CAEIT,GAAIK,EAAOI,GAAGT,GACdF,KAAMO,EAAOI,GAAGX,KAChBC,MAAOM,EAAOI,GAAGV,OAHZU,MAOb,OACI,8BACKH,KCAEI,EAfG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAChB,OACQ,uBACAV,UAAU,mCACVW,KAAK,SACLC,YAAY,gBACZC,SAAUH,KCIPI,G,MAVA,SAACC,GAEZ,OACI,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACKJ,EAAMK,aCeJC,E,kDAlBX,WAAYN,GAAO,IAAD,8BACd,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHA,E,qDAMlB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAG7B,WACI,OAAGG,KAAKJ,MAAMC,SACH,4DAEJG,KAAKX,MAAMK,a,GAfCQ,aCoDZC,E,kDA7Cf,aAAc,IAAD,8BACT,gBAgBJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAACK,YAAaD,EAAME,OAAOC,SAfzC,EAAKZ,MAAM,CACPlB,OAAQ,GACR4B,YAAa,IALR,E,qDAUb,WAAoB,IAAD,OACfG,MAAM,8CACL7C,MAAK,SAAA8C,GAAQ,OAAIA,EAASC,UAC1B/C,MAAK,SAAAgD,GAAK,OAAI,EAAKX,SAAS,CAACvB,OAAQkC,S,oBAQtC,WACI,MAA8BZ,KAAKJ,MAA5BlB,EAAP,EAAOA,OAAQ4B,EAAf,EAAeA,YACTO,EAAiBnC,EAAOoC,QAAO,SAAAC,GAAK,OAAIA,EAAM5C,KAAK6C,cAAcC,SAASX,EAAYU,kBAC5F,OAAiC,IAA7BhB,KAAKJ,MAAMlB,OAAOwC,OACX,4CAIH,sBAAK5C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAU1B,OAAQmC,e,GApC5BM,IAAMjB,WCAxBkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1B/D,M","file":"static/js/main.aaf71829.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\r\n\r\nconst Card = ({name, email, id})=>{\r\n    return(\r\n        <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n            <img src={`https://www.robohash.org/${id}?200x200`} alt=\"pics\"/>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default Card","import React from 'react';\r\nimport Card from './Card';\r\n\r\n\r\nconst CardList = ({robots})=>{\r\n    const cardComponent = robots.map((user, i) => {\r\n        return (\r\n        <Card \r\n            key={i}\r\n            id={robots[i].id} \r\n            name={robots[i].name} \r\n            email={robots[i].email}\r\n            />\r\n    )\r\n})\r\n    return (\r\n        <div>\r\n            {cardComponent}\r\n        </div>\r\n    )\r\n}\r\nexport default CardList","import React from 'react';\r\n\r\nconst SearchBox = ({searchChange}) => {\r\n    return (\r\n            <input \r\n            className='pa3 ba b--green bg-lightest-blue'\r\n            type=\"search\" \r\n            placeholder=\"Search Robots\" \r\n            onChange={searchChange} \r\n        />\r\n    )\r\n}\r\n\r\n    // searchChange= (event)=>{\r\n    //     console.log(event.target.value)\r\n    // }\r\n\r\nexport default SearchBox","import React from 'react'\r\n\r\nconst Scroll = (props)=>{\r\n\r\n    return (\r\n        <div style={{overflowY: 'scroll', border: '3px solid black', height: '800px'}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Scroll;","import React, {Component} from 'react'\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n    componentDidCatch(error, info){\r\n        this.setState({hasError: true})\r\n    }\r\n\r\n    render(){\r\n        if(this.state.hasError){\r\n            return <h1>Oops! Something went wrong</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry","import React from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport './App.css';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\n\r\nclass App extends React.Component{\r\n\r\nconstructor(){\r\n    super();\r\n\r\n    this.state={\r\n        robots: [],\r\n        searchField: ''\r\n    }\r\n\r\n}\r\n\r\ncomponentDidMount(){\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n    .then(response => response.json())\r\n    .then(users => this.setState({robots: users}))\r\n    \r\n}\r\n\r\nonSearchChange = (event)=>{\r\n    this.setState({searchField: event.target.value})\r\n}\r\n\r\n    render(){\r\n        const {robots, searchField} = this.state\r\n        const filteredRobots = robots.filter(robot => robot.name.toLowerCase().includes(searchField.toLowerCase()))\r\n        if (this.state.robots.length === 0){\r\n            return <h1>Loading...</h1>\r\n        }\r\n        else {\r\n            return(\r\n                <div className='tc'>\r\n                    <h1 className='f1'>RoboFriends</h1>\r\n                    <SearchBox searchChange={this.onSearchChange}/>\r\n                    <Scroll>\r\n                        <ErrorBoundry>\r\n                            <CardList robots={filteredRobots}/>\r\n                        </ErrorBoundry>\r\n                    </Scroll>\r\n                    \r\n                </div>\r\n                \r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'tachyons';\r\nimport App from './containers/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}